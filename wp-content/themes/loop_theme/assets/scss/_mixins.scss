@mixin flexDisplay(){
  display: flex;
  flex-wrap: wrap;
}

@mixin flexWidth($value: 100%){
  -moz-flex: 0 0 $value;
  -ms-flex: 0 0 $value;
  flex: $value;
}

@mixin flexAlign($align: auto){
  // stretch, center, start, end
  -ms-align-self: $align;
  align-self: $align;
}

@mixin rotate($deg: 0deg){
  -webkit-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin backgroundDefault( $size: cover, $position: 50%, $repeat: no-repeat ){
  background-size: $size;
  background-position: $position;
  background-repeat: $repeat;
}

@mixin transition( $transition: 0.6s ) {
  -webkit-transition: all $transition;
  -ms-transition: all $transition;
  -o-transition: all $transition;
  transition: all $transition;
}

@mixin oInline( $alignment: middle ) {
  display: inline-block;
  float: none;
  vertical-align: $alignment; 
}

@mixin borderRadius( $radius ) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
}

@mixin bgTransparent( $red, $green, $blue, $opacity ) {
  background: rgba($red, $green, $blue, $opacity);
}

@mixin dgInline( $width:"", $alignment:middle ) {
  display: inline-block;
    vertical-align: $alignment;
    float: none;
    margin: 0 -2px;

  @if $width != "" {
      width: $width;
  } 
}

@mixin dgFloat($position:left, $width:"") {
  float: $position;
  width: $width;
}

@mixin boxShadow( $left, $top, $spread, $distance, $color, $set:"") {

  @if $set == true {
    $set: inset;
  }
  @else {
    $set: '';
  }

  -webkit-box-shadow: $left $top $spread $distance $color $set;
  -ms-box-shadow: $left $top $spread $distance $color $set;
  -o-box-shadow: $left $top $spread $distance $color $set;
  box-shadow: $left $top $spread $distance $color $set;
}


@mixin can-toggle-branding(
  $can-toggle-off-color: #777,
  $can-toggle-on-color: #5fc054,
  $can-toggle-inactive-text: rgba(white, 0.5),
  $can-toggle-transition: cubic-bezier(0,1,0.5,1) ){
  input[type="checkbox"] {
    &[disabled] ~ label {
      color: rgba($can-toggle-off-color, 0.5);
    }
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        background-color: $can-toggle-off-color;
        &:after { color: darken($can-toggle-off-color, 10%); }
      }
    }
    &:hover ~label { color: darken($can-toggle-off-color, 5%); }
    &:checked {
      ~ label {
        &:hover { color: darken($can-toggle-on-color, 3%); }
        .can-toggle__switch {
          background-color: lighten($can-toggle-on-color, 5%);
          &:after { color: darken($can-toggle-on-color, 5%); }
        }
      }
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch {
            background-color: $can-toggle-on-color;
            &:after { color: darken($can-toggle-on-color, 10%); }
          }
        } 
      }
    }
  }
  label {
    .can-toggle__switch {
      transition: background-color 0.3s $can-toggle-transition;
      background: lighten($can-toggle-off-color, 5%);
      &:before { color: $can-toggle-inactive-text; }
      &:after {
        // Autoprefixer choked here, so making the prefixes explicit
        -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
        transition: transform 0.3s $can-toggle-transition;
        color: $can-toggle-off-color; 
      }
    }
  }
}

@mixin can-toggle-appearance(
  $can-toggle-width: 134px,
  $can-toggle-height: 36px,
  $can-toggle-border-radius: 4px,
  $can-toggle-offset: 2px,
  $can-toggle-label-font-size: 14px,
  $can-toggle-switch-font-size: 12px,
  $can-toggle-shadow: 0 3px 3px rgba(black, 0.4)
){
  $can-toggle-switch-width: $can-toggle-width/2;
  input[type="checkbox"] {
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        &:after { box-shadow: $can-toggle-shadow; } 
      }
    }
    &:checked {
      ~ label {
        .can-toggle__switch {
          &:after { transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset),0,0); }  
        }
      }
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch { &:after { box-shadow: $can-toggle-shadow; } }
        } 
      }
    }
  }
  label {
    font-size: $can-toggle-label-font-size;
    .can-toggle__switch {
      height: $can-toggle-height;
      flex: 0 0 $can-toggle-width;
      border-radius: $can-toggle-border-radius;
      &:before {
        left: $can-toggle-width/2;
        font-size: $can-toggle-switch-font-size; 
        line-height: $can-toggle-height;
        width: $can-toggle-width/2;
        padding: 0 12px;
        font-family: $font-mont-sb;
      }
      &:after {
        top: $can-toggle-offset; left: $can-toggle-offset;
        border-radius: $can-toggle-border-radius/2;
        width: $can-toggle-switch-width - $can-toggle-offset; 
        line-height: $can-toggle-height - ($can-toggle-offset*2);
        font-size: $can-toggle-switch-font-size;
        font-family: $font-mont-sb;
      }
      &:hover {
        &:after { box-shadow: $can-toggle-shadow; }
      }
    } 
  }
}
